// Набор уровней Longcat: размеры, стены и старт
// Координаты: x в [0..w-1], y в [0..h-1]
// Поддержка гибкого редактирования: можно задать либо список стен, либо карту символов.
// Символы карты: '#' — стена, '.' — пусто, 'S' — старт кота.

function fromMap(map) {
  const h = map.length;
  const w = map[0]?.length || 0;
  const walls = [];
  let start = null;
  for (let y = 0; y < h; y++) {
    const row = map[y];
    if (row.length !== w) throw new Error('Нерегулярная ширина строк карты уровня');
    for (let x = 0; x < w; x++) {
      const ch = row[x];
      if (ch === '#') walls.push([x, y]);
      else if (ch === 'S') start = [x, y];
    }
  }
  return { w, h, walls, start };
}

// Longcat: 5 уровней по скринам (минимальные размеры + явный периметр)
export const LEVELS = [
  // L1 — 3x3, кот в центре
  (() => {
    return fromMap([
	  '#####',
      '#...#',
      '#.S.#',
      '#...#',
	  '#####'
    ]);
  })(),

  // L2
  (() => {
    return fromMap([
	'######',
	'#...##',
	'#....#',
	'##.S.#',
	'##...#',
	'######'
    ]);
  })(),

  // L3
  (() => {
    return fromMap([
	'######',
	'#....#',
	'#..S.#',
	'#.##.#',
	'#....#',
	'######'
    ]);
  })(),

  // L4
  (() => {
    return fromMap([
	'#######',
	'####..#',
	'##....#',
	'#S.##.#',
	'#..##.#',
	'#.....#',
	'#######'
    ]);
  })(),

  // L5
  (() => {
    return fromMap([
	'#######',
	'##...##',
	'##.#.##',
	'#.....#',
	'#.S.#.#',
	'#.....#',
	'#######'
    ]);
  })(),

  // L6
  (() => {
    return fromMap([
	'#######',
	'###...#',
	'#.....#',
	'#.##.S#',
	'#.##..#',
	'#.....#',
	'#######'
    ]);
  })(),
  //L7
  (() => {
  return fromMap([
    '#######',
    '#...###',
    '#.#..##',
    '#.S...#',
    '#...#.#',
    '#.....#',
    '#######',
  ]);
  })(),
  //L8
  (() => {
    return fromMap([
  	'######',
  	'##...#',
  	'#..#.#',
  	'#....#',
  	'#.S..#',
  	'#....#',
  	'######',
    ]);
  })(),
  //L9
  (() => {
  return fromMap([
    '#######',
    '#...S##',
    '#.#...#',
    '#...#.#',
    '##....#',
    '##..###',
    '#######',
  ]);
  })(),
  //L10
  (() => {
  return fromMap([
    '#######',
    '#.....#',
    '#.S.#.#',
    '#.#...#',
    '#.....#',
    '##....#',
    '#######',
  ]);
  })(),
  //L11
  (() => {
  return fromMap([
    '#######',
    '###...#',
    '#...#.#',
    '##....#',
    '#....S#',
    '#.....#',
    '#######',
  ]);
  })(),
  //L12
  (() => {
  return fromMap([
    '#######',
    '##...##',
    '#...S##',
    '#.#...#',
    '#...#.#',
    '###...#',
    '#######',
  ]);
  })(),
  //L13
  (() => {
  return fromMap([
    '#######',
    '#.....#',
    '#..S#.#',
    '#.....#',
    '#...#.#',
    '#.....#',
    '#######',
  ]);
  })(),
  //L14
  (() => {
  return fromMap([
    '#######',
    '##....#',
    '#...S.#',
    '#.#...#',
    '#..#..#',
    '##...##',
    '#######',
  ]);
  })(),
  //L15
  (() => {
  return fromMap([
    '#######',
    '#.....#',
    '#.##S.#',
    '#.....#',
    '#.#...#',
    '#.....#',
    '#######',
  ]);
  })(),
  //L16
  (() => {
  return fromMap([
    '#######',
    '#.....#',
    '#.#.S.#',
    '#.#.#.#',
    '#.....#',
    '##..###',
    '#######',
  ]);
  })(),
  //L17
  (() => {
  return fromMap([
    '#######',
    '#.....#',
    '#.....#',
    '#....##',
    '#.S...#',
    '#...#.#',
    '#######',
  ]);
  })(),
  //L18
  (() => {
  return fromMap([
    '########',
    '###...##',
    '#...#.##',
    '#.###..#',
    '#.S....#',
    '#.###..#',
    '#......#',
    '########',
  ]);
  })(),
  //L19
  (() => {
  return fromMap([
    '########',
    '##.....#',
    '##.S#..#',
    '##..#.##',
    '#......#',
    '#.#..#.#',
    '#......#',
    '########',
  ]);
  })(),
  //L20
  (() => {
  return fromMap([
    '########',
    '#......#',
    '#......#',
    '#..#S..#',
    '#......#',
    '#......#',
    '#......#',
    '########',
  ]);
  })(),
  //L21
  (() => {
  return fromMap([
    '########',
    '##.....#',
    '#..###.#',
    '#....#.#',
    '#.##.#.#',
    '#......#',
    '####S.##',
    '########',
  ]);
  })(),
  //L22
  (() => {
  return fromMap([
    '########',
    '##...###',
    '##.S...#',
    '##...#.#',
    '##.#...#',
    '#..#..##',
    '#......#',
    '########',
  ]);
  })(),
  //L23
  (() => {
  return fromMap([
    '########',
    '#......#',
    '#.##...#',
    '#.#..#.#',
    '#...##.#',
    '#...S..#',
    '#.....##',
    '########',
  ]);
  })(),
  //L24
  (() => {
  return fromMap([
    '########',
    '##...###',
    '##.#..##',
    '#...#..#',
    '#.S.##.#',
    '#......#',
    '###..###',
    '########',
  ]);
  })(),
  //L25
  (() => {
  return fromMap([
    '########',
    '#...#..#',
    '#.#....#',
    '#......#',
    '#...#..#',
    '#.S....#',
    '#......#',
    '########',
  ]);
  })(),
  //L26
  (() => {
  return fromMap([
    '########',
    '#..##..#',
    '#...#..#',
    '#.#....#',
    '#......#',
    '#.S....#',
    '#...#..#',
    '########',
  ]);
  })(),
  //L27
  (() => {
  return fromMap([
    '########',
    '##.....#',
    '#....#.#',
    '#.#...##',
    '#...#..#',
    '#.S###.#',
    '#......#',
    '########',
  ]);
  })(),
  //L28
  (() => {
  return fromMap([
    '########',
    '#..#...#',
    '#....S.#',
    '#......#',
    '#..#.#.#',
    '#....#.#',
    '#......#',
    '########',
  ]);
  })(),
  //L29
  (() => {
  return fromMap([
    '########',
    '#..##..#',
    '#......#',
    '#...S..#',
    '#......#',
    '#......#',
    '#......#',
    '########',
  ]);
  })(),
  //L30
  (() => {
  return fromMap([
    '########',
    '#......#',
    '#...##.#',
    '##..#S.#',
    '##.....#',
    '#..#...#',
    '#......#',
    '########',
  ]);
  })(),
  //L31
  (() => {
  return fromMap([
    '########',
    '#......#',
    '#......#',
    '#....S.#',
    '#......#',
    '#......#',
    '#......#',
    '########',
  ]);
  })(),
  //L32
  (() => {
  return fromMap([
    '#########',
    '#.......#',
    '#.###...#',
    '#...#...#',
    '#...#.S.#',
    '#.#.#.#.#',
    '#.....#.#',
    '#..#....#',
    '#########',
  ]);
  })(),
  //L33
  (() => {
  return fromMap([
    '#########',
    '#####...#',
    '#.....S.#',
    '#..#....#',
    '#...#...#',
    '#.#...#.#',
    '#.......#',
    '#..##..##',
    '#########',
  ]);
  })(),
  //L34
  (() => {
  return fromMap([
    '#########',
    '#.......#',
    '#.####..#',
    '#......##',
    '##S....##',
    '##..##..#',
    '##......#',
    '##......#',
    '#########',
  ]);
  })(),
  //L35
  (() => {
  return fromMap([
    '#########',
    '#...#...#',
    '#.#...#.#',
    '#.##....#',
    '#....#.##',
    '#..#.S..#',
    '##......#',
    '###..####',
    '#########',
  ]);
  })(),
  //L36
  (() => {
  return fromMap([
    '#########',
    '#......##',
    '#..S.#.##',
    '##...#..#',
    '##....#.#',
    '##....#.#',
    '###...#.#',
    '###.#...#',
    '#########',
  ]);
  })(),
  //L37
  (() => {
  return fromMap([
    '#########',
    '#..#...##',
    '#....#..#',
    '#.#.....#',
    '#...#.S.#',
    '##..#...#',
    '##......#',
    '##......#',
    '#########',
  ]);
  })(),
  //L38
  (() => {
  return fromMap([
    '#########',
    '#...#...#',
    '#.#.#.S.#',
    '#.......#',
    '##......#',
    '#.....#.#',
    '#.###...#',
    '#.......#',
    '#########',
  ]);
  })(),
  //L39
  (() => {
  return fromMap([
    '#########',
    '#..#....#',
    '#..#..#.#',
    '#.......#',
    '#...S.###',
    '#.......#',
    '#....#..#',
    '#......##',
    '#########',
  ]);
  })(),
  //L40
  (() => {
  return fromMap([
    '#########',
    '#.......#',
    '#.....S.#',
    '#.......#',
    '#.#.##..#',
    '#...##..#',
    '#.......#',
    '#.......#',
    '#########',
  ]);
  })(),
  //L41
  (() => {
  return fromMap([
    '#########',
    '#....#..#',
    '#.##.#..#',
    '#.##...##',
    '#.......#',
    '###.....#',
    '#...#S..#',
    '#.......#',
    '#########',
  ]);
  })(),
  //L42
  (() => {
  return fromMap([
    '#########',
    '####....#',
    '##....S.#',
    '##..#...#',
    '###.....#',
    '#...##..#',
    '#.#.....#',
    '#.......#',
    '#########',
  ]);
  })(),
  //L43
  (() => {
  return fromMap([
    '#########',
    '#.....#.#',
    '#.......#',
    '###....##',
    '###.#...#',
    '#.....#.#',
    '#.##S...#',
    '#.....###',
    '#########',
  ]);
  })(),
  //L44
  (() => {
  return fromMap([
    '#########',
    '#.......#',
    '##......#',
    '##...#..#',
    '#..S.#..#',
    '#.......#',
    '#####.#.#',
    '#####...#',
    '#########',
  ]);
  })(),
  //L45
  (() => {
  return fromMap([
    '#########',
    '#.....###',
    '#..S....#',
    '##...##.#',
    '###.....#',
    '#......##',
    '#.##.#..#',
    '#....####',
    '#########',
  ]);
  })(),
  //L46
  (() => {
  return fromMap([
    '#########',
    '####....#',
    '#....##.#',
    '#.#.....#',
    '#.#.....#',
    '#.#..S..#',
    '#.#.##..#',
    '#.......#',
    '#########',
  ]);
  })(),
  //L47
  (() => {
  return fromMap([
    '#########',
    '#.......#',
    '#.#####.#',
    '#.......#',
    '#......##',
    '#....#..#',
    '#.S..##.#',
    '#.......#',
    '#########',
  ]);
  })(),
  //L48
  (() => {
  return fromMap([
    '#########',
    '#.......#',
    '#..S....#',
    '##....###',
    '#...#...#',
    '#.#.....#',
    '#.#..#..#',
    '#.......#',
    '#########',
  ]);
  })(),
  //L49
  (() => {
  return fromMap([
    '#########',
    '#.......#',
    '#.......#',
    '#.......#',
    '###.....#',
    '#...S...#',
    '#.#.....#',
    '#...##..#',
    '#########',
  ]);
  })(),
  //L50
  (() => {
  return fromMap([
    '##########',
    '#..##....#',
    '#..##....#',
    '#.....#..#',
    '#.#.S.#..#',
    '#...#....#',
    '##.......#',
    '#....#...#',
    '#........#',
    '##########',
  ]);
})(),
];

